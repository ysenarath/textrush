from typing import Iterable, Optional, Tuple

class PyKeywordProcessor:
    words: list[str]
    clean_names: list[str]
    case_sensitive: bool

    def __init__(self, case_sensitive: bool = False) -> None: ...
    def __len__(self) -> int: ...
    def __repr__(self): ...
    def add_keyword(self, word: str, clean_name: Optional[str] = None) -> None: ...
    def add_keywords_from_iter(self, words: Iterable[str]) -> None: ...
    def add_keywords_with_clean_name_from_iter(
        self, words: Iterable[Tuple[str, str]]
    ) -> None: ...
    def extract_keywords(self, text: str) -> list[str]: ...
    def extract_keywords_with_span(self, text: str) -> list[tuple[str, int, int]]: ...
    def replace_keywords(self, text: str) -> str: ...
