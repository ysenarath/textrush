from typing import List, Optional, Tuple

class PyKeywordProcessor:
    words: list[str]
    clean_names: list[str]
    case_sensitive: bool

    def __init__(self, case_sensitive: bool = False) -> None: ...
    def __repr__(self): ...
    # number of keywords
    def __len__(self) -> int: ...
    # manage keywords
    def add_keyword(self, word: str, clean_name: Optional[str] = None) -> None: ...
    def remove_keyword(self, word: str) -> None: ...
    def get_all_keywords_with_clean_names(self) -> List[Tuple[str, str]]: ...
    # extract keywords
    def extract_keywords(self, text: str, strategy: str = "all") -> list[str]: ...
    def extract_keywords_with_span(
        self, text: str, strategy: str = "all"
    ) -> list[tuple[str, int, int]]: ...
    # replace keywords
    def replace_keywords(self, text: str) -> str: ...
